<?php

use api\{update as update, chat as chat};
if (update::$callback_data) $ex_callback = explode('_', update::$callback_data);
if ($user->user['display']) $ex_display = explode('_', $user->user['display']);
if ($msg == '‚öî Combats' or update::$callback_data == 'combats') {
    if (update::$callback_data) $chat->deleteMessage(update::$btn_id);
    $warriors = R::find('combatwarriors', 'user_id = ?', [$user->user['id']]);
    if (count($warriors) < 1) {
        $warrior = R::dispense('combatwarriors');
        $warrior->type = 'infantry';
        $warrior->name = '–°—Ç–∞—Ä—Ç–æ–≤–∏–π';
        $warrior->health = 100;
        $warrior->shield = 0;
        $warrior->custom = null;
        $warrior->level = 0;
        $warrior->user_id = $user->user['id'];
        R::store($warrior);
        $chat->sendMessage('‚Ñπ <b>–¢–∏ –æ—Ç—Ä–∏–º–∞–≤ –ø–µ—Ä—à–æ–≥–æ –≤–æ—ó–Ω–∞ (–ü—ñ—Ö–æ—Ç–∏–Ω–µ—Ü—å) –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ!</b>

–†–∞–¥—ñ—É—Å –∞—Ç–∞–∫–∏: <b>1</b>
–°–∏–ª–∞ –∞—Ç–∞–∫–∏: <b>5 - 10</b>
–†—ñ–≤–µ–Ω—å: <b>0</b>');
    }
    $keyboard[0][0]['text'] = 'üî™ –í –±—ñ–π';
    $keyboard[0][0]['callback_data'] = 'combats_attack';
    $keyboard[1][0]['text'] = 'üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞';
    $keyboard[1][0]['callback_data'] = 'combats_stats';
    $keyboard[2][0]['text'] = 'üë®‚Äç‚úàÔ∏è –í–æ—ó–Ω–∏';
    $keyboard[2][0]['callback_data'] = 'combats_warriors';
    $chat->sendMessage('‚öî <b>Combats</b>', update::$message_id, ['inline_keyboard' => $keyboard]);
}
if ($ex_callback[0] == 'combats') {
    if ($ex_callback[1] == 'warriors') {
        $warriors = R::find('combatwarriors', 'user_id = ?', [$user->user['id']]);
        $i = 0;
        foreach ($warriors as $warrior) {
            if ($warrior['type'] == 'infantry') $emoji = 'üó°';
            if ($warrior['type'] == 'archer') $emoji = 'üéØ';
            $keyboard[$i][0]['text'] = $emoji.' '.$warrior['name'];
            $keyboard[$i][0]['callback_data'] = 'combats_warrior_'.$warrior['id'];
            $i++;
        }
        $keyboard[$i][0]['text'] = 'üí∞ –ù–∞–π–Ω—è—Ç–∏ –≤–æ—ó–Ω–∞';
        $keyboard[$i][0]['callback_data'] = 'combats_getwarrior';
        $keyboard[($i+1)][0]['text'] = 'üîô –ù–∞–∑–∞–¥ üîô';
        $keyboard[($i+1)][0]['callback_data'] = 'combats';
        $chat->editMessageText('‚öî <b>Combats</b> - –í–æ—ó–Ω–∏', ['inline_keyboard' => $keyboard], update::$btn_id);
    }
    if ($ex_callback[1] == 'getwarrior' && !$ex_callback[2]) {
        $keyboard[0][0]['text'] = 'üó° –ü—ñ—Ö–æ—Ç–∏–Ω–µ—Ü—å (10–∫üí∞)';
        $keyboard[0][0]['callback_data'] = 'combats_getwarrior_infantry';
        $keyboard[1][0]['text'] = 'üéØ –°—Ç—Ä—ñ–ª–µ—Ü—å (15–∫üí∞)';
        $keyboard[1][0]['callback_data'] = 'combats_getwarrior_archer';
        $keyboard[2][0]['text'] = 'üîô –ù–∞–∑–∞–¥ üîô';
        $keyboard[2][0]['callback_data'] = 'combats';
        $chat->editMessageText('‚öî <b>Combats</b> - –û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –≤–æ—ó–Ω–∞', ['inline_keyboard' => $keyboard], update::$btn_id);
    }
    if ($ex_callback[1] == 'getwarrior' && $ex_callback[2]) {
        if ($ex_callback[2] == 'infantry') $price = 10000; elseif ($ex_callback[2] == 'archer') $price = 15000;
        if ($user->user['balance'] < $price) { $chat->answerCallbackQuery('üí¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –≥—Ä–æ—à–µ–π. –í —Ç–µ–±–µ: '.$user->user['balance'].'üí∞', true); die(); }
        $chat->editMessageText('‚öî <b>Combats</b> - –ù–∞–ø–∏—à–∏ –Ü–º\'—è –¥–ª—è —Å–≤–æ–≥–æ –≤–æ—ó–Ω–∞', null, update::$btn_id);
        $user->update('display', 'combats_getwarrior_'.$ex_callback[2]);
    }
    if ($ex_callback[1] == 'healwarrior') {
        $warrior = R::load('combatwarriors', $ex_callback[2]);
        if (!$warrior) { $chat->answerCallbackQuery('‚ô® –í–æ—ó–Ω–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ'); die(); }
        if ($user->user['balance'] < 500) { $chat->answerCallbackQuery('üí¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –≥—Ä–æ—à–µ–π. –í —Ç–µ–±–µ: '.$user->user['balance'].'üí∞', true); die(); }
        $user->addBal(-500);
        $warrior->health = 100;
        R::store($warrior);
        $ex_callback[1] = 'warrior';
    }
    if ($ex_callback[1] == 'shield') {
        $warrior = R::load('combatwarriors', $ex_callback[2]);
        if (!$warrior) { $chat->answerCallbackQuery('‚ô® –í–æ—ó–Ω–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ'); die(); }
        if ($user->user['balance'] < 100) { $chat->answerCallbackQuery('üí¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –≥—Ä–æ—à–µ–π. –í —Ç–µ–±–µ: '.$user->user['balance'].'üí∞', true); die(); }
        $user->addBal(-100);
        if ($warrior['shield'] > 90) $warrior->shield = 100;
        else $warrior->shield += 10;
        R::store($warrior);
        $ex_callback[1] = 'warrior';
    }
    if ($ex_callback[1] == 'warrior') {
        $warrior = R::load('combatwarriors', $ex_callback[2]);
        if (!$warrior) { $chat->answerCallbackQuery('‚ô® –í–æ—ó–Ω–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ'); die(); }
        if ($warrior['type'] == 'infantry') $type = '–ø—ñ—Ö–æ—Ç–∞ üó°';
        if ($warrior['type'] == 'archer') $type = '–ª—É—á–Ω–∏–∫ üéØ';
        if (!$warrior['custom']) $custom = '–≤—ñ–¥—Å—É—Ç–Ω—è';
        $i = 0;
        if ($warrior['health'] < 100) {
            $keyboard[$i][0]['text'] = 'ü©π –í–∏–ª—ñ–∫—É–≤–∞—Ç–∏ (500üí∞)';
            $keyboard[$i][0]['callback_data'] = 'combats_healwarrior_'.$warrior['id'];
            $i++;
        }
        if ($warrior['shield'] < 100 && $warrior['name'] != '–°—Ç–∞—Ä—Ç–æ–≤–∏–π') {
            $keyboard[$i][0]['text'] = 'üõ° –©–∏—Ç +10 (100üí∞)';
            $keyboard[$i][0]['callback_data'] = 'combats_shield_'.$warrior['id'];
            $i++;
        }
        $keyboard[$i][0]['text'] = 'üîô –ù–∞–∑–∞–¥ üîô';
        $keyboard[$i][0]['callback_data'] = 'combats_warriors';
        $chat->editMessageText('‚öî <b>Combats</b> - –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –≤–æ—ó–Ω–∞
–Ü–º\'—è: <b>'.$warrior['name'].'</b>

<b>–¢–∏–ø: </b>'.$type.'
<b>HP: </b>'.$warrior['health'].'
<b>–©–∏—Ç: </b>'.$warrior['shield'].'
<b>–†—ñ–≤–µ–Ω—å: </b>'.$warrior['level'].'
<b>–°–∏–ª–∞ –∞—Ç–∞–∫–∏: </b>'.($warrior['level']*5+5).' - '.($warrior['level']*6+10).'
<b>–°—É–ø–µ—Ä-–∑–¥–∞—Ç–Ω—ñ—Å—Ç—å: </b>'.$custom, ['inline_keyboard' => $keyboard], update::$btn_id);
    }
    if ($ex_callback[1] == 'attack') {
        $keyboard[0][0]['text'] = 'üë• –ü—Ä–æ—Ç–∏ –≥—Ä–∞–≤—Ü—è';
        $keyboard[0][0]['callback_data'] = 'combats_multiplayer';
        $keyboard[1][0]['text'] = 'ü¶æ –ü—Ä–æ—Ç–∏ –±–æ—Ç–∞';
        $keyboard[1][0]['callback_data'] = 'combats_singleplayer';
        $keyboard[2][0]['text'] = 'üîô –ù–∞–∑–∞–¥ üîô';
        $keyboard[2][0]['callback_data'] = 'combats';
        $chat->editMessageText('‚öî <b>Combats</b> - —Ä–æ–∑–ø–æ—á–∞—Ç–∏ –±—ñ–π', ['inline_keyboard' => $keyboard], update::$btn_id); die();
    }
    if ($ex_callback[1] == 'singleplayer') {
        $keyboard[0][0]['text'] = '‚úî –î–∞–ª—ñ';
        $keyboard[0][0]['callback_data'] = 'combat-bot_start';
        $chat->editMessageText('‚öî <b>Combats</b> - —Å—É–ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ –∑–Ω–∞–π–¥–µ–Ω–æ!', ['inline_keyboard' => $keyboard], update::$btn_id);
        die();
    }
    if ($ex_callback[1] == 'multiplayer') {
        $chat->answerCallbackQuery('‚è≥ –ù–∞—Ä–∞–∑—ñ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ', true); die();
    }
    if ($ex_callback[1] == 'stats') {
        $chat->answerCallbackQuery('‚è≥ –ù–∞—Ä–∞–∑—ñ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ', true); die();
    }
}
if ($ex_display[0] = 'combats') {
    if ($ex_display[1] == 'getwarrior' && $msg) {
        if ($ex_display[2] == 'infantry') $price = 10000; elseif ($ex_display[2] == 'archer') $price = 15000;
        if ($user->user['balance'] < $price) { $chat->sendMessage('üí¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –≥—Ä–æ—à–µ–π. –í —Ç–µ–±–µ: '.$user->user['balance'].'üí∞'); $user->update('display'); die(); }
        if (strlen($msg) > 40) {
            $chat->sendMessage('üôÑ <b>–ó–∞–Ω–∞–¥—Ç–æ –¥–ª–∏–Ω–Ω–µ —ñ–º\'—è, –æ–±–µ—Ä–∏ –∫–æ—Ä–æ—Ç—à–µ</b>'); die();
        }
        $user->addBal($price*-1);
        $type = $ex_display[2];
        $warrior = R::dispense('combatwarriors');
        $warrior->type = $type;
        $warrior->name = $msg;
        $warrior->health = 100;
        $warrior->shield = 0;
        $warrior->custom = null;
        $warrior->level = 0;
        $warrior->user_id = $user->user['id'];
        R::store($warrior);
        $user->update('display');
        $keyboard[0][0]['text'] = 'Ok';
        $keyboard[0][0]['callback_data'] = 'combats_warrior_'.$warrior['id'];
        $chat->sendMessage('‚úÖ <b>–í–∏ –Ω–∞–π–Ω—è–ª–∏ –≤–æ—ó–Ω–∞ –∑–∞ '.$price.'üí∞</b>', null, ['inline_keyboard' => $keyboard]);
    }
}