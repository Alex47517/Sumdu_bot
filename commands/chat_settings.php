<?php
//
// Command: –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —á–∞—Ç—É #
// Text: !–Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è /settings #
// Callback: chatsettings chatsettings-main #
// Display: chatsettings #
// Info: –í—ñ–¥–∫—Ä–∏–≤–∞—î –º–µ–Ω—é –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —á–∞—Ç–∞ #
// Syntax: !–Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è #
// Args: 0 #
// Rank: ChatAdmin #
//
use api\update as update;
if ($ex_callback[0] == 'chatsettings') {
    if ($ex_callback[1] == 'welcome-text') {
        if ($ex_callback[2] == 'view') {
            if ($chat->chat['welcome_text']) {
                if ($chat->chat['welcome_photo']) {
                    $keyboard[0][0]['text'] = 'üîô –ù–∞–∑–∞–¥';
                    $keyboard[0][0]['callback_data'] = 'chatsettings_welcome-text';
                    $chat->deleteMessage(update::$btn_id);
                    $chat->sendPhoto($chat->chat['welcome_photo'], $chat->chat['welcome_text'], null, ['inline_keyboard' => $keyboard]);
                } else {
                    $keyboard[0][0]['text'] = 'üîô –ù–∞–∑–∞–¥';
                    $keyboard[0][0]['callback_data'] = 'chatsettings_welcome-text';
                    $chat->editMessageText($chat->chat['welcome_text'], ['inline_keyboard' => $keyboard], update::$btn_id);
                }
            } else {
                $keyboard[0][0]['text'] = 'üîô –ù–∞–∑–∞–¥';
                $keyboard[0][0]['callback_data'] = 'chatsettings_welcome-text';
                $chat->editMessageText('‚ô® <b>–í—Å—Ç—É–ø–Ω–∏–π —Ç–µ–∫—Å—Ç –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π</b>', ['inline_keyboard' => $keyboard], update::$btn_id);
            }
        } elseif ($ex_callback[2] == 'set') {
            $user->update('display', 'chatsettings_welcome-text_set');
            $keyboard[0][0]['text'] = 'üîô –ù–∞–∑–∞–¥';
            $keyboard[0][0]['callback_data'] = 'chatsettings_welcome-text';
            $chat->editMessageText('üìå <b>–ù–∞–ø–∏—à—ñ—Ç—å –Ω–æ–≤–∏–π –≤—Å—Ç—É–ø–Ω–∏–π —Ç–µ–∫—Å—Ç –¥–ª—è —Ü—å–æ–≥–æ —á–∞—Ç—É</b>
–ó–º—ñ–Ω–Ω–∞ <code>%user</code> –≤–∏–≤–µ–¥–µ —Ç–µ–≥ –≤—Å—Ç—É–ø–Ω–∏–∫–∞
===
<b>–©–æ–± –æ—Ñ–æ—Ä–º–∏—Ç–∏ —Ç–µ–∫—Å—Ç:</b>
[b]<b>–∂–∏—Ä–Ω–∏–π</b>[/b]
[em]<em>–∫—É—Ä—Å–∏–≤</em>[/em]
[u]<u>–ø—ñ–¥–∫—Ä–µ—Å–ª–µ–Ω–∏–π</u>[/u]
[s]<s>–∑–∞–∫—Ä–µ—Å–ª–µ–Ω–∏–π</s>[/s]
[code]<code>–º–æ–Ω–æ</code>[/code]', ['inline_keyboard' => $keyboard], update::$btn_id);
        } else {
            $user->update('display');
            $keyboard[0][0]['text'] = 'ü§≥ –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–µ';
            $keyboard[0][0]['callback_data'] = 'chatsettings_welcome-text_view';
            $keyboard[1][0]['text'] = 'üìå –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –Ω–æ–≤–µ';
            $keyboard[1][0]['callback_data'] = 'chatsettings_welcome-text_set';
            $keyboard[2][0]['text'] = 'üîô –ù–∞–∑–∞–¥';
            $keyboard[2][0]['callback_data'] = 'chatsettings-main';
            $chat->editMessageText('üëã <b>–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤—Å—Ç—É–ø–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç—É</b>', ['inline_keyboard' => $keyboard], update::$btn_id);
        }
    } elseif ($ex_callback[1] == 'welcome-photo') {
        if ($ex_callback[2] == 'skip') {
            $user->update('display');
            $keyboard[0][0]['text'] = 'üîô Ok';
            $keyboard[0][0]['callback_data'] = 'chatsettings_welcome-text';
            $chat->editMessageText('‚úÖ <b>–í—Å—Ç—É–ø–Ω–∏–π —Ç–µ–∫—Å—Ç –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π</b>', ['inline_keyboard' => $keyboard], update::$btn_id);
        } elseif ($ex_callback[2] == 'set') {
            $user->update('display', 'chatsettings_welcome-photo_set');
            $chat->editMessageText('üèû <b>–ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–ª—è –≤—Å—Ç—É–ø–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç—É</b>', null, update::$btn_id);
        }
    } elseif ($ex_callback[1] == 'rules') {
        if ($ex_callback[2] == 'view') {
            if ($chat->chat['rules_text']) {
                if ($chat->chat['rules_photo']) {
                    $keyboard[0][0]['text'] = 'üîô –ù–∞–∑–∞–¥';
                    $keyboard[0][0]['callback_data'] = 'chatsettings_rules';
                    $chat->deleteMessage(update::$btn_id);
                    $chat->sendPhoto($chat->chat['rules_photo'], $chat->chat['rules_text'], null, ['inline_keyboard' => $keyboard]);
                } else {
                    $keyboard[0][0]['text'] = 'üîô –ù–∞–∑–∞–¥';
                    $keyboard[0][0]['callback_data'] = 'chatsettings_rules';
                    $chat->editMessageText($chat->chat['rules_text'], ['inline_keyboard' => $keyboard], update::$btn_id);
                }
            } else {
                $keyboard[0][0]['text'] = 'üîô –ù–∞–∑–∞–¥';
                $keyboard[0][0]['callback_data'] = 'chatsettings_rules';
                $chat->editMessageText('‚ô® <b>–ü—Ä–∞–≤–∏–ª–∞ –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ</b>', ['inline_keyboard' => $keyboard], update::$btn_id);
            }
        } elseif ($ex_callback[2] == 'set') {
            $user->update('display', 'chatsettings_rules_set');
            $keyboard[0][0]['text'] = 'üîô –ù–∞–∑–∞–¥';
            $keyboard[0][0]['callback_data'] = 'chatsettings_rules';
            $chat->editMessageText('üìå <b>–ù–∞–ø–∏—à—ñ—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è —Ü—å–æ–≥–æ —á–∞—Ç—É</b>

<b>–©–æ–± –æ—Ñ–æ—Ä–º–∏—Ç–∏ —Ç–µ–∫—Å—Ç:</b>
[b]<b>–∂–∏—Ä–Ω–∏–π</b>[/b]
[em]<em>–∫—É—Ä—Å–∏–≤</em>[/em]
[u]<u>–ø—ñ–¥–∫—Ä–µ—Å–ª–µ–Ω–∏–π</u>[/u]
[s]<s>–∑–∞–∫—Ä–µ—Å–ª–µ–Ω–∏–π</s>[/s]
[code]<code>–º–æ–Ω–æ</code>[/code]', ['inline_keyboard' => $keyboard], update::$btn_id);
        } else {
            $user->update('display');
            $keyboard[0][0]['text'] = 'ü§≥ –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ';
            $keyboard[0][0]['callback_data'] = 'chatsettings_rules_view';
            $keyboard[1][0]['text'] = 'üìå –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –Ω–æ–≤—ñ';
            $keyboard[1][0]['callback_data'] = 'chatsettings_rules_set';
            $keyboard[2][0]['text'] = 'üîô –ù–∞–∑–∞–¥';
            $keyboard[2][0]['callback_data'] = 'chatsettings-main';
            $chat->editMessageText('üìï <b>–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø—Ä–∞–≤–∏–ª —á–∞—Ç—É</b>
–í—ñ–¥–∫—Ä–∏–≤–∞—î—Ç—å—Å—è –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–æ–º–∞–Ω–¥–∏ <code>!–ø—Ä–∞–≤–∏–ª–∞</code>', ['inline_keyboard' => $keyboard], update::$btn_id);
        }
    } elseif ($ex_callback[1] == 'rules-photo') {
        if ($ex_callback[2] == 'skip') {
            $user->update('display');
            $keyboard[0][0]['text'] = 'üîô Ok';
            $keyboard[0][0]['callback_data'] = 'chatsettings_rules';
            $chat->editMessageText('‚úÖ <b>–ü—Ä–∞–≤–∏–ª–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ</b>', ['inline_keyboard' => $keyboard], update::$btn_id);
        } elseif ($ex_callback[2] == 'set') {
            $user->update('display', 'chatsettings_rules-photo_set');
            $chat->editMessageText('üèû <b>–ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–ª—è –ø—Ä–∞–≤–∏–ª —á–∞—Ç—É</b>', null, update::$btn_id);
        }
    }
} elseif ($ex_display[0] == 'chatsettings') {
    if ($ex_display[1] == 'welcome-text') {
        if ($ex_display[2] == 'set') {
            $store_text = $msg;
            $tags = ['b', 'em', 'u', 's', 'code'];
            foreach ($tags as $tag) {
                $opened = mb_substr_count($store_text, '['.$tag.']');
                $closed = mb_substr_count($store_text, '[/'.$tag.']');
                if ($opened != $closed) {
                    custom_error('–ü–æ–º–∏–ª–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥—É —Ç–µ–≥–∞ "['.$tag.']"', '–í–∏ –≤—ñ–¥–∫—Ä–∏–ª–∏ —Ç–µ–≥ '.$opened.' —Ä–∞–∑(i–≤)
–ê –∑–∞–∫—Ä–∏–ª–∏: '.$closed.' —Ä–∞–∑(i–≤)

–í–∏–ø—Ä–∞–≤—Ç–µ –ø–æ–º–∏–ª–∫—É –∞–±–æ –Ω–∞–ø–∏—à—ñ—Ç—å /start –¥–ª—è –≤–∏—Ö–æ–¥—É');
                }
                $store_text = str_replace('['.$tag.']', '<'.$tag.'>', $store_text);
                $store_text = str_replace('[/'.$tag.']', '</'.$tag.'>', $store_text);
            }
            $chat->update('welcome_text', $store_text);
            $keyboard[0][0]['text'] = '‚ùå –ù—ñ';
            $keyboard[0][0]['callback_data'] = 'chatsettings_welcome-photo_skip';
            $keyboard[0][1]['text'] = '‚úÖ –¢–∞–∫';
            $keyboard[0][1]['callback_data'] = 'chatsettings_welcome-photo_set';
            $chat->sendMessage('üèû <b>–ë–∞–∂–∞—î—Ç–µ –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–ª—è –≤—Å—Ç—É–ø–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç—É?</b>', null, ['inline_keyboard' => $keyboard]);
        }
    } elseif ($ex_display[1] == 'welcome-photo') {
        if ($ex_display[2] == 'set') {
            if (update::$photo_id) {
                $chat->update('welcome_photo', update::$photo_id);
                $user->update('display');
                $keyboard[0][0]['text'] = 'üîô Ok';
                $keyboard[0][0]['callback_data'] = 'chatsettings_welcome-text';
                $chat->sendMessage('‚úÖ <b>–í—Å—Ç—É–ø–Ω–∏–π —Ç–µ–∫—Å—Ç —Ç–∞ —Ñ–æ—Ç–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ</b>', null, ['inline_keyboard' => $keyboard]);
            } else custom_error('–ü–æ–º–∏–ª–∫–∞', '–ù–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–æ—Ç–æ –∞–±–æ –Ω–∞–ø–∏—à—ñ—Ç—å /start –¥–ª—è –≤–∏—Ö–æ–¥—É');
        }
    } elseif ($ex_display[1] == 'rules') {
        if ($ex_display[2] == 'set') {
            $store_text = $msg;
            $tags = ['b', 'em', 'u', 's', 'code'];
            foreach ($tags as $tag) {
                $opened = mb_substr_count($store_text, '['.$tag.']');
                $closed = mb_substr_count($store_text, '[/'.$tag.']');
                if ($opened != $closed) {
                    custom_error('–ü–æ–º–∏–ª–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥—É —Ç–µ–≥–∞ "['.$tag.']"', '–í–∏ –≤—ñ–¥–∫—Ä–∏–ª–∏ —Ç–µ–≥ '.$opened.' —Ä–∞–∑(i–≤)
–ê –∑–∞–∫—Ä–∏–ª–∏: '.$closed.' —Ä–∞–∑(i–≤)

–í–∏–ø—Ä–∞–≤—Ç–µ –ø–æ–º–∏–ª–∫—É –∞–±–æ –Ω–∞–ø–∏—à—ñ—Ç—å /start –¥–ª—è –≤–∏—Ö–æ–¥—É');
                }
                $store_text = str_replace('['.$tag.']', '<'.$tag.'>', $store_text);
                $store_text = str_replace('[/'.$tag.']', '</'.$tag.'>', $store_text);
            }
            $chat->update('rules_text', $store_text);
            $keyboard[0][0]['text'] = '‚ùå –ù—ñ';
            $keyboard[0][0]['callback_data'] = 'chatsettings_rules-photo_skip';
            $keyboard[0][1]['text'] = '‚úÖ –¢–∞–∫';
            $keyboard[0][1]['callback_data'] = 'chatsettings_rules-photo_set';
            $chat->sendMessage('üèû <b>–ë–∞–∂–∞—î—Ç–µ –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–ª—è –ø—Ä–∞–≤–∏–ª —á–∞—Ç—É?</b>', null, ['inline_keyboard' => $keyboard]);
        }
    } elseif ($ex_display[1] == 'rules-photo') {
        if ($ex_display[2] == 'set') {
            if (update::$photo_id) {
                $chat->update('rules_photo', update::$photo_id);
                $user->update('display');
                $keyboard[0][0]['text'] = 'üîô Ok';
                $keyboard[0][0]['callback_data'] = 'chatsettings_rules';
                $chat->sendMessage('‚úÖ <b>–¢–µ–∫—Å—Ç –ø—Ä–∞–≤–∏–ª —Ç–∞ —Ñ–æ—Ç–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ</b>', null, ['inline_keyboard' => $keyboard]);
            } else custom_error('–ü–æ–º–∏–ª–∫–∞', '–ù–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–æ—Ç–æ –∞–±–æ –Ω–∞–ø–∏—à—ñ—Ç—å /start –¥–ª—è –≤–∏—Ö–æ–¥—É');
        }
    }
} else {
    $i = 0;
    if ($chat->chat_id != $user->user['tg_id']) {
        $keyboard[$i][0]['text'] = 'üëã –í—Å—Ç—É–ø–Ω–∏–π —Ç–µ–∫—Å—Ç';
        $keyboard[$i][0]['callback_data'] = 'chatsettings_welcome-text';
        $i++;
        $keyboard[$i][0]['text'] = 'üìï –ü—Ä–∞–≤–∏–ª–∞';
        $keyboard[$i][0]['callback_data'] = 'chatsettings_rules';
        $i++;
        $keyboard[$i][0]['text'] = 'üîí ANTI-BOT';
        $keyboard[$i][0]['callback_data'] = 'chatsettings_antibot';
        $i++;
    } else custom_error('–ü–æ–º–∏–ª–∫–∞', '–¶—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç—ñ–ª—å–∫–∏ –≤ –≥—Ä—É–ø–æ–≤–∏—Ö —á–∞—Ç–∞—Ö');
    if (update::$callback_id) {
        $chat->editMessageText('‚öô <b>–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —á–∞—Ç—É</b>', ['inline_keyboard' => $keyboard], update::$btn_id);
    } else {
        $chat->sendMessage('‚öô <b>–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —á–∞—Ç—É</b>', update::$message_id, ['inline_keyboard' => $keyboard]);
    }
}